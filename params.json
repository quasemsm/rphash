{"name":"Rphash","tagline":"Scalable Big Data Clustering by Random Projection Hashing https://github.com/wilseypa/rphash-golang","body":"# Scalable Big Data Clustering by Random Projection Hashing #\r\n[![Build Status](https://travis-ci.org/wenkesj/rphash.svg)](https://travis-ci.org/wenkesj/rphash)\r\n[![Release Status](https://img.shields.io/badge/version-1.0.0-blue.svg)](https://github.com/wenkesj/rphash/releases)\r\n\r\nThe goal is to create a simple, secure, distributed, scalable, and parallel clustering algorithm to be used on almost any system.\r\n\r\n**Clustering** is a core concept in data analysis. Issues arise with scalability and dimensionality, ever changing environments and compatibility, insecure communications and data movement\r\n\r\n**The solution** is secure, reliable, and fast data for large-scale distributed systems.\r\n\r\n\r\n**The Algorithm** provides more accurate clusters and an inherently distributed system.\r\n\r\n![Clusters](https://github.com/wenkesj/rphash/blob/master/clusters.png)\r\n\r\n**Random Projection Hash (RPHash)** has been created for maximizing parallel computation\r\nwhile providing scalability for large scale deployment. It's suitable for high dimensional data sets and is\r\nscalable and streamline.\r\n\r\n![Overview](https://github.com/wenkesj/rphash/blob/master/overview.png)\r\n\r\n# Table of contents #\r\n+ **[Installing and Testing](https://github.com/wenkesj/rphash#installing-testing-and-plotting)**\r\n+ **[API](https://github.com/wenkesj/rphash#api)**\r\n+ **[Examples](https://github.com/wenkesj/rphash/blob/master/examples/rphash.go)**\r\n+ **[Learn more](https://github.com/wenkesj/rphash/blob/master/REFERENCES.md)**\r\n+ **[Versioning and updates](https://github.com/wenkesj/rphash/blob/master/CHANGELOG.md)**\r\n+ **[Pull requests welcome](https://github.com/wenkesj/rphash/blob/master/TODO.md)**\r\n+ **[Developers](https://github.com/wenkesj/rphash#developers)**\r\n\r\n# Installing Testing and Plotting #\r\n```sh\r\ngit clone --depth=50 --branch=master https://github.com/wenkesj/rphash.git wenkesj/rphash\r\ncd wenkesj/rphash\r\nexport GOPATH=$HOME/<your-gopath>\r\nexport PATH=$HOME/<your-gopath>/bin:$PATH\r\ngo get -t -v ./...\r\nsh install\r\n```\r\n\r\n## Example ##\r\nHere is a simple example of RPHash clustering on a single node. The Algorithm Maps the functions and then Reduces in order to find the of the clusters centroids. It takes in a JSON file and assigns weights to field value, performs the RPHash clustering algorithm, and then outputs the results to a JSON file. The field value weights will be used for multi-dimensional clustering. From the centroids, you can obtain patterns and information from the dataset.\r\n\r\n```sh\r\n# cd examples\r\ngo run rphash.go\r\n```\r\n\r\n```go\r\npackage main;\r\n\r\nimport (\r\n  \"io/ioutil\"\r\n  \"github.com/wenkesj/rphash/api\"\r\n  \"github.com/wenkesj/rphash/parse\"\r\n);\r\n\r\nvar numberOfClusters = 4;\r\n\r\nconst (\r\n  exampleInputFileName = \"input.json\";\r\n  exampleOutputFileName = \"output.json\";\r\n  exampleDataLabel = \"people\";\r\n);\r\n\r\nfunc main() {\r\n  parser := parse.NewParser();\r\n  bytes, _ := ioutil.ReadFile(exampleInputFileName);\r\n  jsonData := parser.BytesToJSON(bytes);\r\n  data := parser.JSONToFloat64Matrix(exampleDataLabel, jsonData);\r\n  cluster := api.NewRPHash(data, numberOfClusters);\r\n\r\n  topCentroids := cluster.GetCentroids();\r\n\r\n  jsonCentroids := parser.Float64MatrixToJSON(exampleDataLabel, topCentroids);\r\n\r\n  jsonBytes := parser.JSONToBytes(jsonCentroids);\r\n  err := ioutil.WriteFile(exampleOutputFileName, jsonBytes, 0644);\r\n  if err != nil {\r\n    panic(err);\r\n  }\r\n};\r\n\r\n```\r\n\r\n## Test ##\r\n```sh\r\ngo test ./tests -v -bench=.\r\n```\r\n\r\n## Plot ##\r\nIf you wish to have this functionality you must run\r\n```sh\r\ngo get github.com/gonum/plot\r\n```\r\nPlot tests. **[option]** is the name of the file/test plot.\r\n```sh\r\nsh rphash/plot [option]\r\n```\r\n\r\nFor example, `sh rphash/plot kmeans`, will run rphash/plots/plot_kmeans.go.\r\n\r\n# Developers #\r\n+ Sam Wenke (**wenkesj**)\r\n+ Jacob Franklin (**frankljbe**)\r\n+ Sadiq Quasem (**quasemsm**)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}